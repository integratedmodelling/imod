namespace imod
   "The imod (Integrated Modelling) ontology includes abstract concepts related to scientific observations.
    It specifies semantics used everywhere in the IM worldview and links im-based concepts to the 
    fundamental ontology for use in derived products."
   version 1.0
   in domain root 
      with core 
          // TODO switch to this import after deciding how to link derived observables created by operators 
          // TODO add the klab: namespace to ground the geometries and other characteristics. Probably the
          //      object properties should also go there, although I still don't know how to tie them here.
         "https://raw.githubusercontent.com/integratedmodelling/odo-im/master/releases/0.1.0/odo.owl" as odo
   metadata {
      dc.creator: (
         "Ferdinando Villa (ferdinando.villa@bc3research.org)"
         "Greta Adamo (greta.adamo@bc3research.org)"
      )
      // TODO add refs and links
   };

/*
 * TODO there should be a mechanism to link all fundamental types to the core ontology and validate
 * coverage and consistency. For now the mechanism lacks completeness and validation.
 * 
 * For this to work, we also need to link the output of unary operators. This could be as simple as
 * 
 * abstract quality Numerosity is core count of imod:Quality;
 * abstract event Change is change in imod:Quality
 * 
 * TODO we should either have all core derivation use 'equals' or 'is' mandatorily. Given that we will
 * likely supplement the core namespace with properties, probably 'is' is better so that all derivations
 * are in the same place. Equalities should be reserved for in-worldview statements.
 */ 

// TODO link the output of operators. Could be as simple as

// abstract quality Numerosity is core count of imod:Quality;
// abstract event Change is change in imod:Quality

// would need a check that everything is included and store those in CoreOntology for reference. 
// Not sure what we should do for restrictions but probably just adding the properties based on the operators would be enough.           
// Also all needed annotation properties would be just added to the core namespace and that would be it. 
 
//Identity
abstract identity Identity
    "Identity specifies the assignment of a concept to a certain class of concepts based on 
     a series of characteristics, such as morphological, behavioral and contextual"
   is core odo:Identity;
   
// Identities capturing discrete time for the worldview
// TODO MOVE THESE TO THE klab: NAMESPACE
//identity Hourly is core observation:Hourly;
//identity Yearly is core observation:Yearly;
//identity Monthly is core observation:Monthly;
//identity Daily is core observation:Daily;
//identity Weekly is core observation:Weekly;


//Identities capturing discrete space for the worldview

//abstract identity Puntal is core observation:Puntal;
//abstract identity Lineal is core observation:Lineal;
//abstract identity Areal is core observation:Areal;
//abstract identity Volumetric is core observation:Volumetric;
 
//@fixme("Mah. A final output would be Outcome, Goal is definitely not an identity, probably both are configurations") 
abstract identity Outcome
     "Final output of a Process";

//The notion of Boundary should be better documented

@fixme("The 'requires identity' clause needs revision, here and elsewhere. Implication (to be understood) is a likely candidate.")
abstract identity ConceptualBoundary 
     //metadata { plato.stanford.edu/entries/boundary/ }
    "A conceptual boundary is the conceptual delimitation that allows the identification of entities"
     requires identity Goal;
  
     
// State of affair: https://plato.stanford.edu/entries/states-of-affairs/#:~:text=States%20of%20affairs%20are%20similar,explained%20further)%20objects%20and%20properties.
//abstract identity StateOfAffairs
//     "State of affairs is a complex situation that obtain or not"
//     has children
 //    Obtainable,
  //   Unobtainable;

//Attribute
   
abstract attribute Attribute
    "Attribute specifies descriptive accidental predicates of a subject."
   is core odo:Attribute;
   

abstract attribute Evidence
     "Characterizes degrees of evidence for an hypothesis."   
     has children 
         Possible "Hypothesis cannot be dismissed based on reasoning although no documented supporting observations exist.",
         Certain "No doubt can remain about evidence - self-evident or blatant truth",
         Hypothetical "Hypothesis can be made in support of an interpretation although no documented supporting observations exist. Similarly valid counter-arguments may exist.",
         Observed "Degree of evidence is supported by documented observations, but still  evidence is indirect.";


abstract subjective ordering Coarseness 
   has children
      Fine,
      Coarse;
   
abstract subjective ordering Level 
      "Two-level hierarchy for generic discretizations." 
      has children  
      (Low 
            has children 
              Minimal, 
              ExtremelyLow, 
              VeryLow, 
              ModeratelyLow
             ),
        Moderate, 
       (High 
            has children
              ModeratelyHigh,
              VeryHigh,
              ExtremelyHigh,
              Maximal
            );
   
//Realm
   
abstract realm Realm
    "Realm specifies the physical (e.g. of the biosphere) location of a concept"
   is core odo:Realm;

//Role

abstract role Role
    "Role specifies predicates that can be played by a concept in a context"
   is core odo:Role;
   
deniable attribute Comparable
   "Describes the ability to rank an object over another one."
   applies to imod:Concordance;

role Reference
    "Applied to an observation used as reference to compute the primary observation by comparison. 
     Can be linked to a rescaling filters to shift the context of observation made in different space and time."
    requires attribute Comparable;

@todo("check extraction of attributes")
role Indicator 
   applies to Quantity
   has children   
     (AbsoluteIndicator
     "An absolute indicator has values that range between a known minimum and maximum. Its value corresponds 
      to a state that is fully understood in terms of the indicator."  
       ),
     (RelativeIndicator 
     "A relative indicator can only compare two states of the same entity within the same context of observation.
      It does not suggest any absolute value for the state it refers to."
     );

/**
 * Observable
 */

//Process
abstract process Process
     "A dynamic occurrence unfolding over time, typically open-ended (no temporal boundaries) and homogeneous in nature."
   is core odo:Process;
    
//Event
     
abstract event Event
    "An event is an independent occurrent that happens in time, close-ended (with temporal boundaries) and with participants."
   is core odo:Event;
       
@todo("should have some articulation of the 'Outcome' part")
@todo("see note above for the 'requires identity' clause")
deniable attribute Positive
    "Describes the positive or negative outcome of an event or a subject."
    requires identity Outcome;

@todo("Must articulate relationship vs. bond and functional vs. structural, as these are fundamental and disjoint.")   
abstract relationship Relationship
      "A relationship directionally connects two subjects or agents."
    is core odo:Relationship
    has disjoint children
        (StructuralRelationship
        	"Structural relationships between two substantials (relata) allow another substantial (relator) to emerge."
        	is core odo:StructuralRelationship
        	),
        (FunctionalRelationship
        	"Functional relationships between two substantials (relata) allow an event (relator) to emerge."
        	is core odo:FunctionalRelationship
        	),
        (Bond
        "Bi-directional relationship between substantials"	
        )
    ;

abstract configuration Configuration
    "Configurations represent emergent patterns (aggregates of other entities) that are generated by observations of 
     quality and relationship."
   is core odo:Configuration;



abstract configuration Network 
   "A network is a configuration of subjects connected by relationships."
   is imod:Configuration of imod:Relationship
   has children 
      (abstract SpatialNetwork  
        //inherits Areal
      ),
      (
      abstract IntentionalNetwork
      inherits Outcome  
      );

/**
 * Countable
 */

@fixme("Not sure this should be articulated here. Seems to me that Substantial is more generic than agent.")
abstract thing Substantial
   "Substantial is independent for its existence and bears qualities. Substantial are similar to Substantial 
    in UFO and DOLCE" 
   is core odo:Substantial
     has children
      ( Subject
      	"Subject is a Substantial without agentive characteristics"
      	is core odo:Subject
      ),
       (Agent
      	"Agent is a Substantial with intentionality" 
      	is core odo:Agent
      );

//abstract thing Subject
//    "Subject is a Substantial without agentive characteristics"
//   is core odo:Subject;

//@fixme("Apart from the circular reference, not sure having agency means the same as 'being Intentional'.")
//abstract agent Agent
//   "Agent is a Substantial with intentionality" 
//   is core odo:Agent
   // FIXME circular dependency (and wrong)
//   inherits decision:Intentional
 //  ;
   
 


/**
 * Qualities
 */
 
abstract quality Quality
     "Qualities represent observables that cannot be observed directly but only through other entities that bear them.
      Their observation produces 'values' in some reference domain. They inhere to other entities and depend on their bearers."
     is core odo:Quality;

abstract quantity Quantity
    "Quantity are qualities whose values are quantified numerically."     
   is core odo:QuantifiableQuality;
   
abstract duration Duration 
   is core odo:Duration;
   

//Space qualities
//Comment: re-think "observation" ontology and below concepts
@fixme("Decide what to do with the spatial geometry identities. They can be here w/o referring to ODO (probably best) although
        they should refer to klab: namespace as they're needed in the software.")
abstract area Area 
   is core odo:Area 
   requires identity (imod:Areal or imod:Volumetric);

abstract length Length
   is core odo:Length 
   requires identity (imod:Lineal or imod:Areal or imod:Volumetric);       

//Artifact capability inspired by: Borgo, S., Vieu, L.: Artefacts in formal ontology. In: Philosophy of technology and engineering sciences
abstract attribute Capability
     "Capability is the described quality of certain artifacts and natural agents."
     requires identity Goal
     describes Quality
     has disjoint children
        ArtifactCapability,
        NaturalCapability;
        
//abstract attribute AttributedCapability
//     "Attributed capability refers to capabilities of artifacts and natural agents assigned by other agent."
//     applies to physical:Artifact, physical:HumanMadeResource, Agent;


//Numerosity

abstract quantity Numerosity     
   is core odo:Numerosity;


/**
 * Intensive physical properties 
 * TODO will make definitions mandatory at some point :)
 */
 

abstract angle Angle 
   "Geometric property that measures the amount of rotation needed to bring one line or plane into coincidence with another. 
   Typically measured in degrees or radians."   
   is core odo:Angle;

abstract energy Energy
   "The capacity of a system to perform work or produce heat. Typically measured in joules (J)." 
   is core odo:Energy;

abstract temperature Temperature
   "Measure of the average kinetic energy of the particles in a substance or system. 
   Typically measured with scales such as Celsius, Fahrenheit, or Kelvin."
   is core odo:Temperature;

resistivity Resistivity 
   "A measure of a material's resistance to the flow of electric current. 
   It quantifies how strongly a material opposes the flow of electrical charges and is typically measured in ohm-meters."
   is core odo:Resistivity;

abstract velocity Velocity
   "Quantity that describes the rate of change of an object's position with respect to time. 
   Typically measured in units such as meters per second (m/s) or kilometers per hour (km/h)." 
   is core odo:Speed;


abstract mass Mass
   "Property of matter that quantifies the amount of substance in an object. 
    Typically measured in units such as kilograms (kg) or grams (g)."
   is core odo:Mass 
   requires identity Volumetric;

abstract amount Amount
   "Refers to a quantitative measure or quantity of something. 
    It represents the magnitude or volume of a substance, object, or phenomenon, and can be expressed numerically or qualitatively."
   is core odo:Amount
   requires identity Volumetric;

abstract volume Volume
   "Measure of the three-dimensional space occupied by an object or substance. It quantifies the amount of space enclosed by the boundaries 
   of the object or substance and is typically measured in cubic units such as cubic meters or cubic centimeters." 
   is core odo:Volume
   requires identity Volumetric;
   
abstract weight Weight
   "The force exerted on an object due to gravity. 
   Typically expressed in units of force such as newtons (N) or pounds-force (lbf)."  
   is core odo:Weight  
   requires identity Volumetric;
   
abstract quantity Proportion
   "The relative size, quantity, or magnitude of one element compared to another within a given context. 
   Can be expressed numerically, often as a fraction, percentage, or ratio."       
   is core odo:Proportion;

abstract quantity Ratio
   "The quantitative relationship between two quantities or amounts, typically expressed as the quotient of one quantity divided by another. It indicates the proportion or comparative magnitude of one quantity relative to another. 
    Ratios can be represented in various forms, such as fractions, decimals, or percentages."       
   is core odo:Ratio;


//Category
   
abstract class Type 
    "Type defines categories"        
   is core odo:EnumerableQuality; 

//Priority

abstract priority Priority
   "Relative importance or precedence assigned to entities or actions within a system or context, often based on predefined criteria or constraints." 
   is core odo:Priority;

abstract priority Concordance
"Conceptual distance from an idea or theory"
;

//Value

abstract money MonetaryValue
    "Quantitative representation of the economic worth or exchangeable value assigned to goods, services, or assets, typically denoted in a currency unit."
    is core odo:MonetaryValue;
    
abstract quantity PreferenceValue
   "Quantitative or qualitative measure representing the degree of desirability, favorability, or priority assigned to an option, choice, or outcome within a decision-making context."
   is core odo:PreferenceValue;
   
abstract role ValueObject
     "An entity that embodies, represents, or holds value, which may include but is not limited to monetary, conceptual, or symbolic value."
     applies to Subject;
     
abstract relationship ValuationRelationship
     "Connection or association between entities or concepts that involves the assessment, determination, or assignment of value."
     links Agent to Subject;

deniable attribute Regularity
	"Denotes the state or quality of being consistent, orderly, or conforming to a pattern or set of rules, often implying predictability and absence of deviation or randomness."
     has disjoint children
         (Regular
         	"State or condition characterized by consistency, orderliness, or adherence to established patterns or rules."
         ),
         (Irregular
         	" Lack of orderliness, or deviation from established patterns or rules, often exhibiting unpredictability or variability in behaviour or occurrence."
         );
         
//Extent

//extent Multiplicity 
//    is core odo:Multiplicity;

@fixme("definitely needs better derivation. For these dichotomic articulations we could use 'sealed' but we could also have a 
        deniable attribute for the positive case and add an alias for the negative: e.g.
        deniable attribute Net; attribute Gross equals not imod:Net;")   
abstract attribute MeasurementRelated
      has children
      (@colormap(colors=(red white green), midpoint=0)
      Net
      ), 
      Gross;
      
//@colormap(colors=(red white green), midpoint=0)      
//attribute Net
//	"" 
//	deniable as Gross;
     
//Temporal extent
            
abstract extent Time 
     is core odo:Time 
     has disjoint children 
     (RegularTime 
         "Regular time is observed as a grid of equal contiguous durations." 
          inherits imod:Regular
     ),
     (IrregularTime 
      "Irregular time is observed as contiguous sequence of intervals of possibly different duration."
     inherits imod:Irregular
     );
    
//Spatial extent
 
 abstract extent Space 
    "Space in the IM worldview is 0, 1,2 or 3-dimensional, with implied traits that describe human perception and modalities of description proper of an Euclidean view of the world."
    is core odo:Space
    has disjoint children ( 
       PuntalSpace 
       inherits Puntal
       ),
       (LinealSpace
         inherits Lineal
       ),
       (abstract ArealSpace 
           inherits Areal 
           has children 
               (GridSpace  
                  inherits Regular 
                ),
                (VectorSpace
                inherits Irregular  
                )
       ),
       (abstract VolumetricSpace
         inherits Volumetric
             has children
                  (VoxelSpace
                  inherits Regular  
                  ),
                  (PolyedricSpace
                  inherits Irregular   
                  )
            );
             
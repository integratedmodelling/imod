namespace imod
	"The imod (Integrated Modelling) ontology specifies semantics used everywhere in the IM worldview
	 and links im-based concepts to the fundamental ontology for use in derived products."
	version 1.0
	in domain root
	metadata {
		dc:creator: (
			"Ferdinando Villa (ferdinando.villa@bc3research.org)"
			"Greta Adamo (greta.adamo@bc3research.org)"
		)
	};


/**
 * Import classes from ODO-IM core ontology: https://github.com/integratedmodelling/odo-im
 */	

/**
 * Predicate
 */
 
abstract identity Identity
    "Identity specifies the assigment of a concep to a certain class of concepts based on 
     the essential/identifying characterics of the concept itself"
	equals core observation:Identity;

//Discrete space for the worldview

abstract identity Puntal is core observation:Puntal;
abstract identity Lineal is core observation:Lineal;
abstract identity Areal is core observation:Areal;
abstract identity Volumetric is core observation:Volumetric;

identity Hourly is core observation:Hourly;
identity Yearly is core observation:Yearly;
identity Monthly is core observation:Monthly;
identity Daily is core observation:Daily;
identity Weekly is core observation:Weekly;
	
abstract attribute Attribute
    "Attribute specifies descriptive accidental predicates of a subject."
	equals core observation:Attribute;
	
abstract realm Realm
    "Realm specifies the physical (e.g. of the biosphere) location of a concept"
	equals core observation:Realm;
	
abstract realm Role
    "Role specifies predicates that can be played by a concept in a context"
	equals core observation:Role;

/**
 * Observable
 */


abstract process Process
    "A process is something happening in time, open-ended (without temporal boundaries), and homogeneous"
	equals core observation:Process;
	
abstract event Event
    "An event is something happening in time, close-ended (with temporal boundaries), having participants"
	equals core observation:Event;
	
abstract relationship Relationship
    "A relationship directionally connects two subjects or agents"
	equals core observation:Relationship;
	
abstract configuration Configuration
    "Configurations represent emergent patterns (aggregates of other entities) that are generated by observations of 
     quality and relationship"
	equals core observation:Configuration;

/**
 * Countable
 */

abstract agent Substantial
	"Substantial is independent for its existence and bears qualities. Substantial are similar to Subtantial 
    in UFO and DOLCE" 
	equals core observation:Substantial 
;

abstract thing Subject
    "Subject is a Substantial without agentive characteristics"
	equals core observation:Subject
;

abstract agent Agent
	"Agent is a Substantial with intentionality" 
	equals core observation:Agent
	inherits Intentional 
;

deniable attribute Intentional
	"Intention is a mental state (e.g. goal, belief, desire)";

/**
 * Qualities
 */

abstract quantity Quantity
    "Quantity are quality that can be quantified."     
	equals core observation:QuantifiableQuality;

/**
 * Intensive physical properties 
 */
 
abstract angle Angle 
	equals core observation:Angle;

abstract energy Energy 
	equals core observation:Energy;

abstract duration Duration 
	equals core observation:Duration;

abstract temperature Temperature 
	equals core observation:Temperature;

resistivity Resistivity 
	equals core observation:Resistivity;

abstract velocity Velocity 
	equals core observation:Speed;
 
/**
 * Relative quantities 
 */
 
abstract quantity Proportion     
	equals core observation:Proportion;

abstract quantity Ratio     
	equals core observation:Ratio;

/**
 *  
 */
	
attribute Predicted
	is core observation:Predicted;
 	
abstract quantity Numerosity     
	equals core observation:Numerosity;
	
abstract class Type         
	equals core observation:Type; 

abstract priority Priority 
	equals core observation:Priority;

abstract money MonetaryValue 
	equals core observation:MonetaryValue;


/**
 * Extensive physical properties 
 */

abstract area Area 
	equals core observation:Area 
	requires identity (Areal or Volumetric);

abstract length Length
	equals core observation:Length 
	requires identity (Lineal or Areal or Volumetric);

abstract mass Mass 
	equals core observation:Mass 
	requires identity Volumetric;

abstract amount Amount
	equals core observation:Amount
	requires identity Volumetric;

abstract volume Volume 
	equals core observation:Volume
	requires identity Volumetric;
	
abstract weight Weight  
	equals core observation:Weight  
	requires identity Volumetric;





